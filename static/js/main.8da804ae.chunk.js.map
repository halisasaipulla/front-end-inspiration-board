{"version":3,"sources":["components/boardForm.js","components/board.js","components/card.js","components/cardForm.js","components/CardList.js","App.js","reportWebVitals.js","index.js"],"names":["BoardForm","createNewBoard","useState","title","setTitle","owner","setOwner","className","onSubmit","e","preventDefault","console","log","type","value","onChange","target","placeholder","disabled","length","Board","index","active","onClick","currentBoard","board","Card","card","deleteCard","likeCard","cardClassName","color","message","likes_count","CardForm","createNewCard","setMessage","stickyNoteColor","setStickyNoteColor","CardList","selectedBoard","cardsData","setCardsData","useEffect","axios","get","id","then","response","data","cards","catch","error","alert","delete","newCardsData","filter","existingCard","put","map","cardElements","post","push","App","boardsData","setBoardsData","setSelectedBoard","chosen","setChosen","deleteBoard","board_id","newBoardsData","existingBoard","boardsElements","newBoard","boards","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8da804ae.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './boardForm.css';\n\nconst BoardForm = ({ createNewBoard }) => {\n    const [title, setTitle]=useState('');\n    const [owner, setOwner]=useState('');\n    const handleTitleChange = (e) => {\n        console.log(e.target.value); \n        setTitle(e.target.value); };\n\n    const handleOwnerChange = (e) => { \n        console.log(e.target.value); \n        setOwner(e.target.value); };\n\n    const submitNewBoard = (e) => {\n        e.preventDefault();\n        console.log(title);\n        console.log(owner);\n        createNewBoard({ title, owner });\n        setTitle('');\n        setOwner('');\n    };\n    \n    return (\n        <div className=\"create-board-div\">\n            <form onSubmit={submitNewBoard} className='new-board-form'>\n                <label>Title</label>\n                <input \n                    type='text'\n                    value={title}\n                    onChange={handleTitleChange}\n                    placeholder='Add a title'\n                />\n                <label>Owner</label>\n                <input \n                    type='text' \n                    value={owner}\n                    onChange={handleOwnerChange}\n                    placeholder='Add a owner name'\n                />\n                <p>Preview: {title} - {owner}</p>\n                <input type=\"Submit\"\n                disabled={((title.length === 0) || (owner.length === 0) || (title.length > 40) || (owner.length > 40))}\n                />\n            </form>\n        </div>\n    )\n}\nexport default BoardForm;","import React from 'react';\nimport './board.css';\n\nconst Board = ({ index, active, onClick, currentBoard, board }) => {\n    return (\n      <div onClick={() => {onClick(); currentBoard(board)}} className={active ? \"active title box-size\" : \"title box-size\"}>\n        {index}. {board.title} - {board.owner}\n      </div>\n    );\n  };\n\nexport default Board;","import './card.css';\n\nconst Card = ({ card, deleteCard, likeCard }) => {\n    const cardClassName = 'card ' + card.color;\n    return (\n    <div className={cardClassName}>\n        <h4>{card.message}</h4>\n        <div>\n            <span className='card-bottom'>{card.likes_count}</span>\n            <span onClick={() => {likeCard(card)}} className='card-bottom'>‚ù§Ô∏è</span>\n            <span onClick={() => {deleteCard(card)}} className='card-bottom'>üóë</span>\n        </div>\n    </div>);\n    \n};\n\nexport default Card;","import { useState } from 'react';\nimport './cardForm.css';\n\nconst CardForm = ({ createNewCard }) => {\n    const [message, setMessage] = useState('');\n    const [stickyNoteColor, setStickyNoteColor] = useState('yellow');\n\n    const handleMessageChange = (e) => { setMessage(e.target.value) };\n\n    const submitNewCard = (e) => {\n        e.preventDefault();\n        createNewCard(message, stickyNoteColor);\n        setMessage('');\n    };\n\n    const handleCardColorChange = (e) => {\n        setStickyNoteColor(e.target.value);\n    }\n\n    return (\n        <div>\n            <h2>Create a New Card</h2>\n            <form onSubmit={submitNewCard} className='new-card-form'>\n                <label className=\"form-title\">Message</label>\n                <input \n                    type='text'\n                    value={message}\n                    onChange={handleMessageChange} \n                    placeholder='Add a message'\n                />\n                <p>Preview: {message} </p>\n                <p className=\"form-title\">Select a sticky note color:</p>\n                <select onChange={handleCardColorChange}>\n                    <option value=\"yellow\">Yellow</option>\n                    <option value=\"pink\">Pink</option>\n                    <option value=\"blue\">Blue</option>\n                    <option value=\"green\">Green</option>\n                </select>\n                <input type=\"Submit\"\n                disabled={message.length === 0 || message.length > 40}\n                />\n            </form>\n        </div>\n    )\n}\n\nexport default CardForm;","import Card from './card';\nimport CardForm from './cardForm';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './cardList.css';\n\nconst CardList = ({ selectedBoard }) => {\n    const [cardsData, setCardsData] = useState([]);\n\n    useEffect(() => {\n        axios.get(`https://lucky7th-board.herokuapp.com/boards/${selectedBoard.id}/cards`).then((response)=> {\n            setCardsData(response.data.cards);\n        }).catch((error) => {\n            console.log('Error:', error);\n            alert('Couldn\\'t get cards for this board.');\n        });\n    }, [selectedBoard]);\n\n    const deleteCard = (card) => {\n        axios.delete(`https://lucky7th-board.herokuapp.com/cards/${card.id}`).then((response) => {\n            const newCardsData = cardsData.filter((existingCard) => {\n                return existingCard.id !== card.id;\n            });\n                setCardsData(newCardsData);\n        }).catch((error) => {\n            console.log('Error:', error);\n            alert('Couldn\\'t delete the card.');\n        });\n    };\n\n    const likeCard = (card) => {\n        axios.put(`https://lucky7th-board.herokuapp.com/cards/${card.id}/like`).then((response) => {\n            const newCardsData = cardsData.map((existingCard) => {\n            return existingCard.id !== card.id ? existingCard : {...card, likes_count: card.likes_count + 1}\n        });\n            setCardsData(newCardsData);\n        }).catch((error) => {\n            console.log('Error:', error);\n            alert('Couldn\\'t +1 the card.');\n        });\n    };\n\n    const cardElements = cardsData.map((card, index) => {\n        return (\n            <Card \n                key={index} \n                card={card}\n                deleteCard={deleteCard}\n                likeCard={likeCard}\n            />)\n    });\n\n    const createNewCard = (message, color) => {\n        axios.post(\n            `https://lucky7th-board.herokuapp.com/boards/${selectedBoard.id}/cards`,\n            {message, color}\n        ).then((response) => {\n            const cards = [...cardsData];\n            cards.push(response.data.card);\n            \n            setCardsData(cards);\n        }).catch((error) => {\n            console.log('Error:', error);\n            alert('Couldn\\'t create a new card.');\n        });\n    };\n\n    return (\n        <section className='card-list-sec'>\n            <section>\n                <h2>Cards for {selectedBoard.title}</h2>\n                <div className='cards-container'>\n                    {cardElements}\n                </div>\n                \n            </section>\n            <CardForm createNewCard={createNewCard}></CardForm> \n        </section>\n    );\n};\n\nexport default CardList;","import './App.css';\nimport BoardForm from './components/boardForm.js';\nimport Board from './components/board.js';\nimport CardList from './components/CardList.js'\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n    const [boardsData, setBoardsData] = useState([]);\n\n    const [selectedBoard, setSelectedBoard] = useState({\n        title: '',\n        owner: '',\n        id: null\n    });\n    \n    const [chosen, setChosen] = useState();\n\n    useEffect(() => {\n        axios.get('https://lucky7th-board.herokuapp.com/boards', {\n        }).then((response) => {\n            setBoardsData(response.data);\n            \n        })\n    }, []);\n\n    const currentBoard = (board) => { setSelectedBoard(board) };\n\n    const deleteBoard = (board_id) => {\n        if (board_id) {\n            axios.delete(`https://lucky7th-board.herokuapp.com/boards/${board_id}`).then((response) => {\n                const newBoardsData = boardsData.filter((existingBoard) => {\n                    return existingBoard.id !== board_id;\n                });\n                setBoardsData(newBoardsData);\n                setSelectedBoard({\n                    title: '',\n                    owner: '',\n                    id: null\n                })\n            }).catch((error) => {\n                console.log('Error:', error);\n                alert('Couldn\\'t delete the card.');\n            });\n        }\n    };\n    \n    const boardsElements = boardsData.map((board, index) => {\n        return (\n                <Board\n                        key={index}\n                        index={index + 1}\n                        board={board}\n                        currentBoard={currentBoard}\n                        active={board.title === chosen}\n                        deleteBoard={deleteBoard}\n                        onClick={() => setChosen(board.title)}        \n                />);          \n        }\n    );\n    \n    const createNewBoard = (newBoard) => {\n        axios.post('https://lucky7th-board.herokuapp.com/boards', newBoard).then((response) => {\n            console.log(\"Response:\", response.data.board);\n            const boards = [...boardsData];\n            boards.push(response.data.board);\n            setBoardsData(boards);\n        }).catch((error) => {\n            console.log('Error:', error);\n            alert('Couldn\\'t create a new board.');\n        });\n    }\n\n    return (\n        <div>\n            <h1 className='board-header'>Lucky 7th Inspiration Board</h1>\n            <section className='board-sec'>\n                <div>\n                    <div className='board-list-header'>\n                        <h2>Boards</h2>\n                        <div \n                            onClick={() => {deleteBoard(selectedBoard.id)}} \n                            className='delete-board-icon'>üóë</div>\n                    </div>\n                    <div className=\"board-list\">\n                        {boardsElements}\n                    </div>\n                </div>\n                <div>\n                    <h2>Create a New Board</h2>\n                    <BoardForm createNewBoard={createNewBoard}></BoardForm>\n                </div>\n            </section>\n            <section>\n                {selectedBoard.id ? <CardList selectedBoard={selectedBoard}></CardList> : ''}\n            </section>\n        </div>\n    );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}